---
import { type EntryTranslationReference } from "@/utils/content";
import { getLanguageName, useTranslation, type Language } from "@/utils/i18n";

interface Props {
  translations: EntryTranslationReference[];
  lang: Language;
  class?: string;
}

const { translations, class: className } = Astro.props;

const t = useTranslation(Astro.props.lang);
---

<aside class="my-6 rounded-sm bg-blue-100 p-4 text-sm dark:bg-slate-900" class:list={className}>
  <div class="container mx-auto max-w-4xl">
    <p>
      {t("ui", "translation_available_in")}:
      {
        translations.map((translation, idx) => (
          <Fragment>
            <a
              class="px-1 font-semibold hover:underline"
              href={translation.slug}
              lang={translation.lang}
              hreflang={translation.lang}
            >
              {getLanguageName(translation.lang)} {translation.isOriginal ? `(${t("ui", "original")})` : null}
            </a>
            {idx < translations.length - 1 ? "|" : null}
          </Fragment>
        ))
      }
    </p>
  </div>
</aside>
