---
import TwitterLogo from "@/components/logos/Twitter.astro";
import GitHubLogo from "@/components/logos/GitHub.astro";
import LinkedInLogo from "@/components/logos/LinkedIn.astro";
import RSSFeedLogo from "@/components/logos/RSSFeed.astro";
import { useTranslation, type Language, getLocalizedPage, getLanguageName } from "@/utils/i18n";

import ThemeSelector from "@/components/user-settings/ThemeSelector";
import LanguageSelector from "@/components/user-settings/LanguageSelector";
import type { EntryTranslationReference } from "@/utils/content";

interface Props {
  lang: Language;
  translations: EntryTranslationReference[];
}

const { lang, translations: propTranslations } = Astro.props;

/* eslint-disable @typescript-eslint/no-unsafe-assignment */
const social = [
  { href: "https://twitter.com/taverasmisael", text: "Twitter", icon: TwitterLogo },
  { href: "https://www.linkedin.com/in/taverasmisael/", text: "LinkedIn", icon: LinkedInLogo },
  { href: "https://github.com/taverasmisael", text: "GitHub", icon: GitHubLogo },
  { href: getLocalizedPage(lang, "feed"), text: "RSS", icon: RSSFeedLogo },
];
/* eslint-enable @typescript-eslint/no-unsafe-assignment */

const year = new Date().getFullYear();
const t = useTranslation(lang);

const currentLanguage: EntryTranslationReference = { slug: Astro.url.toString(), lang };
const translations = propTranslations
  .concat(currentLanguage)
  .filter(({ lang: translationLang }) => translationLang !== ("x-default" as unknown as Language))
  .map(({ lang, ...rest }) => ({ ...rest, lang, name: getLanguageName(lang) }));

const copyText = {
  copyright: t("ui", "copyright"),
  themeSelector: {
    selectTheme: t("ui", "theme.select"),
    themes: {
      light: t("ui", "theme.light"),
      dark: t("ui", "theme.dark"),
      auto: t("ui", "theme.auto"),
    },
  },
  languageSelector: {
    selectLanguage: t("ui", "translation.select"),
    unavailable: t("ui", "translation.not_available"),
  },
};
---

<footer
  class="container mx-auto border-t border-slate-200/50 px-2 py-6 text-center dark:border-slate-700/50 sm:px-6 sm:text-left"
>
  <div class="flex items-center justify-center gap-4 pb-6 sm:justify-between">
    <ThemeSelector localeStrings={copyText.themeSelector} client:visible />
    <LanguageSelector
      localeStrings={copyText.languageSelector}
      lang={lang}
      options={translations}
      value={currentLanguage}
      client:visible
    />
  </div>
  <div class="text-xs">
    <div class="sm:flex sm:items-center sm:justify-between">
      <p class="hidden sm:block">
        {copyText.copyright} ©️{year} - <strong class="font-semibold">Misael Taveras</strong>
      </p>
      <div class="flex items-center justify-center gap-4">
        {
          social.map(link => (
            <a
              href={link.href}
              target="_blank"
              class="p-2 hover:text-slate-800 dark:hover:text-blue-50"
              target="_blank"
            >
              <span class="sr-only">{link.text}</span>
              <link.icon class="w-6 sm:w-5" />
            </a>
          ))
        }
      </div>
    </div>
    <p class="block pt-2 text-slate-700 dark:text-slate-300 sm:hidden">
      <strong class="font-semibold">Misael Taveras</strong> ©️{year}
    </p>
  </div>
</footer>
