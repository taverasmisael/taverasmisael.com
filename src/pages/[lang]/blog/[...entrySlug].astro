---
import Admonition from "@/components/content/Admonition/Admonition.astro";
import Layout from "@/layouts/Entry.astro";
// @ts-expect-error - Astro@2.4.0 broke the "astro:assets" import
import { Image } from "astro:assets";
import { getCollection, type BlogEntry, blogCollectionToBlogEntry } from "@/utils/content";
import PostTranslations from "@/components/PostTranslations.astro";
import type { Language } from "@/i18n";

// We need to prerender all blog entries to generate the sitemap feed.
// At least is faster than gatsby. At this point, not sure why not do full SSG instead.
// export const prerender = true;
export async function getStaticPaths() {
  const blogCollection = await getCollection("blog");
  const blogEntries = await Promise.all(blogCollection.map(e => blogCollectionToBlogEntry(e, e.slug)));

  return blogEntries.map(blogEntry => {
    const [lang, entrySlug] = blogEntry.entry.slug.split("/") as [Language, string];

    return { params: { lang, entrySlug }, props: { post: blogEntry } };
  });
}

interface Props {
  post: BlogEntry;
}

const post = Astro.props.post;

if (!post) return Astro.redirect(`/404?from=${Astro.url.pathname}`);

const { meta, entry, translations } = post;
const { Content } = await entry.render();

const components = {
  Admonition: Admonition,
};
---

<Layout
  canonical={meta.canonical}
  lang={Astro.params.lang as Language}
  description={meta.description}
  title={meta.title}
  translations={translations}
>
  <main
    class="prose prose-slate mx-auto px-4 dark:prose-invert lg:prose-lg 2xl:prose-xl prose-img:mx-auto prose-img:rounded-sm prose-img:shadow-sm"
  >
    <div class="not-prose">
      {!!translations.length && <PostTranslations lang={meta.lang} translations={translations} />}
    </div>
    <article>
      <Image
        alt={entry.data.title}
        src={entry.data.banner.src}
        width={entry.data.banner.width}
        height={entry.data.banner.height}
        class:list={{ "!mt-0": !!translations.length }}
      />
      <h1>{entry.data.title}</h1>
      <Content components={components} />
    </article>
  </main>
</Layout>
