---
import { isSupportedLang, LANGUAGES, getLocalizedPage, useTranslation, type Language } from "@/utils/i18n";
import { slugToCanonical } from "@/utils/content";
import FullWidthBlock from "@/components/content/FullWidthBlock.astro";
import Layout from "@/layouts/WithHeader.astro";
import PageBanner from "@/components/PageBanner.astro";
import RecentPosts from "@/components/RecentPosts.astro";

interface Props {
  frontmatter: AboutFrontmatter;
}

interface AboutFrontmatter {
  lang: Language;
  title: string;
  description: string;
}

const PAGE = "about";

const { frontmatter } = Astro.props;
const { lang } = frontmatter;

if (!isSupportedLang(lang)) {
  return Astro.redirect(`/404?from=${Astro.url.pathname}`);
}

const { origin } = Astro.url;
const translations = LANGUAGES.filter(l => l !== lang).map(language => ({
  lang: language,
  slug: slugToCanonical(getLocalizedPage(language, PAGE), origin),
}));

const canonical = slugToCanonical(getLocalizedPage(lang, PAGE), origin);
const t = useTranslation(lang);
---

<Layout
  lang={lang}
  canonical={canonical}
  description={t("page_descriptions", PAGE)}
  title={t("navigation", PAGE)}
  translations={translations}
>
  <main>
    <PageBanner class="bg-blue-100 dark:bg-gray-950">
      {t("messages", "cv_is_available_in")}
      {" "}<a
        href="/taverasmisael-frontend-engineer-resume.pdf"
        download="Misael-Taveras__frontend-engineer--resume.pdf"
        class="underline">{t("ui", "download_here").toLocaleLowerCase()}</a
      >.
    </PageBanner>
    <div class="container mx-auto w-full">
      <div class="prose prose-slate mx-auto px-4 dark:prose-invert lg:prose-lg 2xl:prose-xl">
        <slot />
        <FullWidthBlock withContainer class="not-prose">
          <RecentPosts lang={lang} />
        </FullWidthBlock>
      </div>
    </div>
  </main>
</Layout>
<script>
  import confetti from "canvas-confetti";
  document.querySelectorAll("[data-confetti-button]").forEach(handler =>
    handler.addEventListener("click", () => {
      const width = window.innerWidth;
      const height = window.innerHeight;
      const pos = handler.getClientRects().item(0) ?? { x: width / 2, y: height / 2 };
      const origin = {
        x: (pos.x / width) + 0.02,
        y: (pos.y / height) + 0.2,
      };
      confetti({
        origin,
        disableForReducedMotion: true,
        shapes: ["star"],
        colors:  ["#b91c1c", "#f87171", "#ef4444", "#dc2626", "#7f1d1d"],
      });
    })
  );
</script>
